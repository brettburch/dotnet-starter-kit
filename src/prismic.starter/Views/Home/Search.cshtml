@using prismic
@model prismic.mvc.starter.PrismicSearchResponse
@{string refId = Model.Context.MaybeRef;}

<h2>
	@switch (Model.Response.Results.Count)
	{
	    case 0: @:No documents found
	    break;
	    case 1: @:One document found
	    break;
	    default: @:Showing @Model.Response.Results.Count out of @Model.Response.TotalResultsSize documents
	    break;
	}
  </h2>
  <ul>
  	@foreach (var document in Model.Response.Results) {
  	<li>
        <a href="@Model.Context.ResolveLink(document)">@document.Slug</a>
    </li>
  	}
  </ul>

  @if(Model.Response.TotalPages > 1) {
    <div>
      @if(Model.Response.PrevPage != null) {
      	@Html.ActionLink("Previous", "Index", new { q = Model.Query, refId, page = Model.Response.Page - 1 })
      } else {
      <span>Previous</span>
      }
      @if(Model.Response.NextPage != null) {
      	@Html.ActionLink("Next", "Index", new { q = Model.Query, refId, page = Model.Response.Page + 1 })
      } else {
      <span>Next</span>
      }
    </div>
  }

  <p>
  	@Html.ActionLink("Back to home", "Index", new { refId })
  </p>